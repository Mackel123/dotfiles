# Sample config reference: https://github.com/koekeishiya/skhd/blob/master/examples/skhdrc
# Keywords (modifiers and literals): https://github.com/koekeishiya/skhd/issues/1

# NOTE:
# 1). ALT for changing focus (window, space, monitor)
# 2). ALT + SHIFT for window operation
# 3). ALT + CTRL for space operation
# 4). MEH (ALT + CTRL + SHIFT) for toggling window properties
# 5). FN for changing window size
# 6). FN + SHIFT for floating window operation

# Mode declaration
# 1) default: all keybindings are available
# 2) passthrough: all keybindings are unavailable. (If the keybindings are conflict with other application,
# we could switch to off mode)
:: default : yabai -m config active_window_border_color 0xff407294
:: passthrough : yabai -m config active_window_border_color 0xff8d5524

# Mode switching
hyper - x ; passthrough
passthrough < hyper - x ; default

# Restart yabai and spacebar service
hyper - r : launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai"; \
            launchctl kickstart -k "gui/${UID}/homebrew.mxcl.spacebar"

# Open terminal
# cmd - return : /Applications/alacritty.app/Contents/MacOS/alacritty
cmd - return : /Applications/kitty.app/Contents/MacOS/kitty --single-instance -d ~ &> /dev/null
# cmd - return : ~/.config/yabai/scripts/open-iterm.sh

# ==============
# Changing focus
# ==============

# Focus window
alt - k : yabai -m window --focus north
alt - j : yabai -m window --focus south
alt - h : yabai -m window --focus west
alt - l : yabai -m window --focus east
alt - p : yabai -m window --focus recent
alt - 0x2B : yabai -m window --focus stack.prev   # < for previous
alt - 0x2F : yabai -m window --focus stack.next   # > for next

# Focus workspace
alt - 0x21 : yabai -m space --focus prev   # [
alt - 0x1E : yabai -m space --focus next   # ]
alt - 1 : yabai -m space --focus 1
alt - 2 : yabai -m space --focus 2
alt - 3 : yabai -m space --focus 3
alt - 4 : yabai -m space --focus 4
alt - 5 : yabai -m space --focus 5
alt - 6 : yabai -m space --focus 6
alt - 7 : yabai -m space --focus 7
alt - 8 : yabai -m space --focus 8
alt - 9 : yabai -m space --focus 9
alt - 0 : yabai -m space --focus 10

# Focus display (monitor)
# i for the center monitor, u for the left monitor and o for the right monitor
alt - i : yabai -m display --focus 1
alt - u : yabai -m display --focus 2
alt - o : yabai -m display --focus 3

# =================
# Window operations
# =================

# Move (swap) window
alt + shift - k : yabai -m window --swap north
alt + shift - j : yabai -m window --swap south
alt + shift - h : yabai -m window --swap west
alt + shift - l : yabai -m window --swap east

# Send window to workspace
alt + shift - 1 : yabai -m window --space 1
alt + shift - 2 : yabai -m window --space 2
alt + shift - 3 : yabai -m window --space 3
alt + shift - 4 : yabai -m window --space 4
alt + shift - 5 : yabai -m window --space 5
alt + shift - 6 : yabai -m window --space 6
alt + shift - 7 : yabai -m window --space 7
alt + shift - 8 : yabai -m window --space 8
alt + shift - 9 : yabai -m window --space 9
alt + shift - 0 : yabai -m window --space 10

# Send window to monitor
alt + shift - i : yabai -m window --display 1
alt + shift - u : yabai -m window --display 2
alt + shift - o : yabai -m window --display 3

# Warp (re-insert)
alt + shift - w : yabai -m window --warp north
alt + shift - s : yabai -m window --warp south
alt + shift - a : yabai -m window --warp west
alt + shift - d : yabai -m window --warp east

# Set insertion position in the focused window for the window to be opened
#         (Up)
#          =
# (Left) [   ] (Right)
#          '
#        (Down)
alt + shift - 0x18 : yabai -m window --insert north   # =
alt + shift - 0x27 : yabai -m window --insert south   # '
alt + shift - 0x21 : yabai -m window --insert west    # [
alt + shift - 0x1E : yabai -m window --insert east    # ]
alt + shift - 0x2A : yabai -m window --insert stack   # \

# ================
# Space operations
# ================

# Create workspace
alt + ctrl - n : yabai -m space --create

# Destroy workspace
alt + ctrl - w : yabai -m space --destroy

# Move workspace to monitor
alt + ctrl - i : yabai -m space --display 1
alt + ctrl - u : yabai -m space --display 2
alt + ctrl - o : yabai -m space --display 3

# Swap workspace
alt + ctrl - 0x21 : yabai -m space --move prev  # [
alt + ctrl - 0x1E : yabai -m space --move next  # ]
alt + ctrl - 1 : yabai -m space --move 1
alt + ctrl - 2 : yabai -m space --move 2
alt + ctrl - 3 : yabai -m space --move 3
alt + ctrl - 4 : yabai -m space --move 4
alt + ctrl - 5 : yabai -m space --move 5
alt + ctrl - 6 : yabai -m space --move 6
alt + ctrl - 7 : yabai -m space --move 7
alt + ctrl - 8 : yabai -m space --move 8
alt + ctrl - 9 : yabai -m space --move 9
alt + ctrl - 0 : yabai -m space --move 10

# Toggle workspace layout
alt + ctrl - b : yabai -m space --layout bsp && \
                 osascript -e "display notification \"Change the workspace layout to bsp\" with title \"yabai\""
alt + ctrl - f : yabai -m space --layout float && \
                 osascript -e "display notification \"Change the workspace layout to float\" with title \"yabai\""
alt + ctrl - s : yabai -m space --layout stack && \
                 osascript -e "display notification \"Change the workspace layout to stack\" with title \"yabai\""

# ========================
# Toggle window properties
# ========================

# Toggle window between tiling and floating
meh - t : ~/.config/yabai/scripts/toggle-window-floating-tiling.sh

# Toggle window fullscreen zoom
meh - m : yabai -m window --toggle zoom-fullscreen

# Toggle window split type (horizontally or vertically in terms of its parent)
meh - s : yabai -m window --toggle split

# Toggle window topmost (i.e., pin the window)
meh - p : yabai -m window --toggle topmost

# Toggle sticky (show on all spaces)
meh - a : yabai -m window --toggle sticky

# Toggle window border
meh - b : yabai -m window --toggle border

# ==================
# Change window size
# ==================

#               7(+)
#      -----------------------
#      |        u(-)         |
#      |                     |
# h(+) | j(-)           k(-) | l(+)
#      |        n(-)         |
#      |----------------------
#               space(+)

fn - u : yabai -m window --resize top:0:20          # top-
fn - 7 : yabai -m window --resize top:0:-20         # top+
fn - n : yabai -m window --resize bottom:0:-20      # bottom-
fn - space : yabai -m window --resize bottom:0:20   # bottom+
fn - j : yabai -m window --resize left:20:0         # left-
fn - h : yabai -m window --resize left:-20:0        # left+
fn - k : yabai -m window --resize right:-20:0       # right-
fn - l : yabai -m window --resize right:20:0        # right+

# Balance size of windows
fn - 0 : yabai -m space --balance

# =========================
# Floating window operation
# =========================

# Movement
fn + shift - k : yabai -m window --move rel:0:-20
fn + shift - j : yabai -m window --move rel:0:20
fn + shift - h : yabai -m window --move rel:-20:0
fn + shift - l : yabai -m window --move rel:20:0

# Split screen
fn + shift - a : yabai -m window --grid 1:2:0:0:1:1   # left-half
fn + shift - d : yabai -m window --grid 1:2:1:0:1:1   # right-half
fn + shift - w : yabai -m window --grid 2:1:0:0:1:1   # upper-half
fn + shift - s : yabai -m window --grid 2:1:0:1:1:1   # lower-half

# Fullscreen
fn + shift - m : yabai -m window --grid 1:1:0:0:1:1

# Restore: centered and properly resized based on the display position (horizontally or vertically positioned)
fn + shift - 0 : read w h <<< $(echo $(yabai -m query --displays --display | jq .frame | jq '.w, .h')) && \
                 ( [ $w -gt $h ] && yabai -m window --grid 7:5:1:1:3:5 || yabai -m window --grid 5:10:1:1:8:2 )
